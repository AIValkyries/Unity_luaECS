//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ResourcesSystemsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ResourcesSystems), typeof(Entitas.Feature));
		L.RegFunction("SetupAssetBundle", SetupAssetBundle);
		L.RegFunction("LoadAsset", LoadAsset);
		L.RegFunction("LoadAllAssets", LoadAllAssets);
		L.RegFunction("New", _CreateResourcesSystems);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("UseAssetBundle", get_UseAssetBundle, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateResourcesSystems(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				ResourcesSystems obj = new ResourcesSystems();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: ResourcesSystems.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetupAssetBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			ResourcesSystems.SetupAssetBundle();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAsset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ResourcesSystems obj = (ResourcesSystems)ToLua.CheckObject<ResourcesSystems>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Type arg1 = ToLua.CheckMonoType(L, 3);
			UnityEngine.Object o = obj.LoadAsset(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAllAssets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ResourcesSystems obj = (ResourcesSystems)ToLua.CheckObject<ResourcesSystems>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Object[] o = obj.LoadAllAssets(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UseAssetBundle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ResourcesSystems obj = (ResourcesSystems)o;
			bool ret = obj.UseAssetBundle;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index UseAssetBundle on a nil value");
		}
	}
}

