//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Entitas_Unity_VisualDebugging_DebugSystemsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Entitas.Unity.VisualDebugging.DebugSystems), typeof(Entitas.Systems));
		L.RegFunction("Add", Add);
		L.RegFunction("ResetDurations", ResetDurations);
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("Execute", Execute);
		L.RegFunction("Cleanup", Cleanup);
		L.RegFunction("StepExecute", StepExecute);
		L.RegFunction("StepCleanup", StepCleanup);
		L.RegFunction("TearDown", TearDown);
		L.RegFunction("New", _CreateEntitas_Unity_VisualDebugging_DebugSystems);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("avgResetInterval", get_avgResetInterval, set_avgResetInterval);
		L.RegVar("paused", get_paused, set_paused);
		L.RegVar("totalInitializeSystemsCount", get_totalInitializeSystemsCount, null);
		L.RegVar("totalExecuteSystemsCount", get_totalExecuteSystemsCount, null);
		L.RegVar("totalCleanupSystemsCount", get_totalCleanupSystemsCount, null);
		L.RegVar("totalTearDownSystemsCount", get_totalTearDownSystemsCount, null);
		L.RegVar("totalSystemsCount", get_totalSystemsCount, null);
		L.RegVar("initializeSystemsCount", get_initializeSystemsCount, null);
		L.RegVar("executeSystemsCount", get_executeSystemsCount, null);
		L.RegVar("cleanupSystemsCount", get_cleanupSystemsCount, null);
		L.RegVar("tearDownSystemsCount", get_tearDownSystemsCount, null);
		L.RegVar("name", get_name, null);
		L.RegVar("gameObject", get_gameObject, null);
		L.RegVar("executeDuration", get_executeDuration, null);
		L.RegVar("initializeSystemInfos", get_initializeSystemInfos, null);
		L.RegVar("executeSystemInfos", get_executeSystemInfos, null);
		L.RegVar("cleanupSystemInfos", get_cleanupSystemInfos, null);
		L.RegVar("tearDownSystemInfos", get_tearDownSystemInfos, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEntitas_Unity_VisualDebugging_DebugSystems(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Entitas.Unity.VisualDebugging.DebugSystems obj = new Entitas.Unity.VisualDebugging.DebugSystems();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				Entitas.Unity.VisualDebugging.DebugSystems obj = new Entitas.Unity.VisualDebugging.DebugSystems(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Entitas.Unity.VisualDebugging.DebugSystems.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)ToLua.CheckObject<Entitas.Unity.VisualDebugging.DebugSystems>(L, 1);
			Entitas.ISystem arg0 = (Entitas.ISystem)ToLua.CheckObject<Entitas.ISystem>(L, 2);
			Entitas.Systems o = obj.Add(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetDurations(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)ToLua.CheckObject<Entitas.Unity.VisualDebugging.DebugSystems>(L, 1);
			obj.ResetDurations();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)ToLua.CheckObject<Entitas.Unity.VisualDebugging.DebugSystems>(L, 1);
				obj.Initialize();
				return 0;
			}
			else if (count == 2)
			{
				Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)ToLua.CheckObject<Entitas.Unity.VisualDebugging.DebugSystems>(L, 1);
				object arg0 = ToLua.ToVarObject(L, 2);
				obj.Initialize(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Entitas.Unity.VisualDebugging.DebugSystems.Initialize");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Execute(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)ToLua.CheckObject<Entitas.Unity.VisualDebugging.DebugSystems>(L, 1);
			obj.Execute();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Cleanup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)ToLua.CheckObject<Entitas.Unity.VisualDebugging.DebugSystems>(L, 1);
			obj.Cleanup();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StepExecute(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)ToLua.CheckObject<Entitas.Unity.VisualDebugging.DebugSystems>(L, 1);
			obj.StepExecute();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StepCleanup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)ToLua.CheckObject<Entitas.Unity.VisualDebugging.DebugSystems>(L, 1);
			obj.StepCleanup();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TearDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)ToLua.CheckObject<Entitas.Unity.VisualDebugging.DebugSystems>(L, 1);
			obj.TearDown();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_avgResetInterval(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Entitas.Unity.VisualDebugging.DebugSystems.avgResetInterval);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_paused(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			bool ret = obj.paused;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index paused on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_totalInitializeSystemsCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			int ret = obj.totalInitializeSystemsCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index totalInitializeSystemsCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_totalExecuteSystemsCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			int ret = obj.totalExecuteSystemsCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index totalExecuteSystemsCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_totalCleanupSystemsCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			int ret = obj.totalCleanupSystemsCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index totalCleanupSystemsCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_totalTearDownSystemsCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			int ret = obj.totalTearDownSystemsCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index totalTearDownSystemsCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_totalSystemsCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			int ret = obj.totalSystemsCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index totalSystemsCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_initializeSystemsCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			int ret = obj.initializeSystemsCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index initializeSystemsCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_executeSystemsCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			int ret = obj.executeSystemsCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index executeSystemsCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cleanupSystemsCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			int ret = obj.cleanupSystemsCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cleanupSystemsCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tearDownSystemsCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			int ret = obj.tearDownSystemsCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tearDownSystemsCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			string ret = obj.name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			UnityEngine.GameObject ret = obj.gameObject;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_executeDuration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			double ret = obj.executeDuration;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index executeDuration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_initializeSystemInfos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			Entitas.Unity.VisualDebugging.SystemInfo[] ret = obj.initializeSystemInfos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index initializeSystemInfos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_executeSystemInfos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			Entitas.Unity.VisualDebugging.SystemInfo[] ret = obj.executeSystemInfos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index executeSystemInfos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cleanupSystemInfos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			Entitas.Unity.VisualDebugging.SystemInfo[] ret = obj.cleanupSystemInfos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cleanupSystemInfos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tearDownSystemInfos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			Entitas.Unity.VisualDebugging.SystemInfo[] ret = obj.tearDownSystemInfos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tearDownSystemInfos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_avgResetInterval(IntPtr L)
	{
		try
		{
			Entitas.Unity.VisualDebugging.AvgResetInterval arg0 = (Entitas.Unity.VisualDebugging.AvgResetInterval)ToLua.CheckObject(L, 2, typeof(Entitas.Unity.VisualDebugging.AvgResetInterval));
			Entitas.Unity.VisualDebugging.DebugSystems.avgResetInterval = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_paused(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Entitas.Unity.VisualDebugging.DebugSystems obj = (Entitas.Unity.VisualDebugging.DebugSystems)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.paused = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index paused on a nil value");
		}
	}
}

