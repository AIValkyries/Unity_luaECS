//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Entitas_SystemsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Entitas.Systems), typeof(System.Object));
		L.RegFunction("Add", Add);
		L.RegFunction("Remove", Remove);
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("Execute", Execute);
		L.RegFunction("Cleanup", Cleanup);
		L.RegFunction("TearDown", TearDown);
		L.RegFunction("ActivateReactiveSystems", ActivateReactiveSystems);
		L.RegFunction("DeactivateReactiveSystems", DeactivateReactiveSystems);
		L.RegFunction("ClearReactiveSystems", ClearReactiveSystems);
		L.RegFunction("New", _CreateEntitas_Systems);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEntitas_Systems(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Entitas.Systems obj = new Entitas.Systems();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Entitas.Systems.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Entitas.Systems obj = (Entitas.Systems)ToLua.CheckObject<Entitas.Systems>(L, 1);
			Entitas.ISystem arg0 = (Entitas.ISystem)ToLua.CheckObject<Entitas.ISystem>(L, 2);
			Entitas.Systems o = obj.Add(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Remove(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Entitas.Systems obj = (Entitas.Systems)ToLua.CheckObject<Entitas.Systems>(L, 1);
			Entitas.ISystem arg0 = (Entitas.ISystem)ToLua.CheckObject<Entitas.ISystem>(L, 2);
			obj.Remove(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Entitas.Systems obj = (Entitas.Systems)ToLua.CheckObject<Entitas.Systems>(L, 1);
				obj.Initialize();
				return 0;
			}
			else if (count == 2)
			{
				Entitas.Systems obj = (Entitas.Systems)ToLua.CheckObject<Entitas.Systems>(L, 1);
				object arg0 = ToLua.ToVarObject(L, 2);
				obj.Initialize(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Entitas.Systems.Initialize");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Execute(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Systems obj = (Entitas.Systems)ToLua.CheckObject<Entitas.Systems>(L, 1);
			obj.Execute();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Cleanup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Systems obj = (Entitas.Systems)ToLua.CheckObject<Entitas.Systems>(L, 1);
			obj.Cleanup();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TearDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Systems obj = (Entitas.Systems)ToLua.CheckObject<Entitas.Systems>(L, 1);
			obj.TearDown();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ActivateReactiveSystems(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Systems obj = (Entitas.Systems)ToLua.CheckObject<Entitas.Systems>(L, 1);
			obj.ActivateReactiveSystems();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeactivateReactiveSystems(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Systems obj = (Entitas.Systems)ToLua.CheckObject<Entitas.Systems>(L, 1);
			obj.DeactivateReactiveSystems();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearReactiveSystems(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Entitas.Systems obj = (Entitas.Systems)ToLua.CheckObject<Entitas.Systems>(L, 1);
			obj.ClearReactiveSystems();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

