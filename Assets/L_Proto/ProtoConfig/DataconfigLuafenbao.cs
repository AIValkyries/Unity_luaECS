// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataconfig_luafenbao.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dataconfig {

  /// <summary>Holder for reflection information generated from dataconfig_luafenbao.proto</summary>
  public static partial class DataconfigLuafenbaoReflection {

    #region Descriptor
    /// <summary>File descriptor for dataconfig_luafenbao.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataconfigLuafenbaoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpkYXRhY29uZmlnX2x1YWZlbmJhby5wcm90bxIKZGF0YWNvbmZpZyI8CglM",
            "dWFGZW5CYW8SDgoGQWJOYW1lGAEgASgJEg4KBlBha2FnZRgCIAEoDRIPCgdW",
            "ZXJzaW9uGAMgASgNIjYKDkx1YUZlbkJhb0FycmF5EiQKBWl0ZW1zGAEgAygL",
            "MhUuZGF0YWNvbmZpZy5MdWFGZW5CYW9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dataconfig.LuaFenBao), global::Dataconfig.LuaFenBao.Parser, new[]{ "AbName", "Pakage", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dataconfig.LuaFenBaoArray), global::Dataconfig.LuaFenBaoArray.Parser, new[]{ "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LuaFenBao : pb::IMessage<LuaFenBao>,IComponent {
    private static readonly pb::MessageParser<LuaFenBao> _parser = new pb::MessageParser<LuaFenBao>(() => new LuaFenBao());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LuaFenBao> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dataconfig.DataconfigLuafenbaoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuaFenBao() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuaFenBao(LuaFenBao other) : this() {
      abName_ = other.abName_;
      pakage_ = other.pakage_;
      version_ = other.version_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuaFenBao Clone() {
      return new LuaFenBao(this);
    }

    /// <summary>Field number for the "AbName" field.</summary>
    public const int AbNameFieldNumber = 1;
    private string abName_ = "";
    /// <summary>
    ///* assetbundleName 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbName {
      get { return abName_; }
      set {
        abName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Pakage" field.</summary>
    public const int PakageFieldNumber = 2;
    private uint pakage_;
    /// <summary>
    ///* 所属包体 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Pakage {
      get { return pakage_; }
      set {
        pakage_ = value;
      }
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 3;
    private uint version_;
    /// <summary>
    ///* 分包版本号 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LuaFenBao);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LuaFenBao other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbName != other.AbName) return false;
      if (Pakage != other.Pakage) return false;
      if (Version != other.Version) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AbName.Length != 0) hash ^= AbName.GetHashCode();
      if (Pakage != 0) hash ^= Pakage.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AbName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AbName);
      }
      if (Pakage != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Pakage);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Version);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AbName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbName);
      }
      if (Pakage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pakage);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LuaFenBao other) {
      if (other == null) {
        return;
      }
      if (other.AbName.Length != 0) {
        AbName = other.AbName;
      }
      if (other.Pakage != 0) {
        Pakage = other.Pakage;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AbName = input.ReadString();
            break;
          }
          case 16: {
            Pakage = input.ReadUInt32();
            break;
          }
          case 24: {
            Version = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LuaFenBaoArray : pb::IMessage<LuaFenBaoArray>,IComponent {
    private static readonly pb::MessageParser<LuaFenBaoArray> _parser = new pb::MessageParser<LuaFenBaoArray>(() => new LuaFenBaoArray());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LuaFenBaoArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dataconfig.DataconfigLuafenbaoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuaFenBaoArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuaFenBaoArray(LuaFenBaoArray other) : this() {
      items_ = other.items_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuaFenBaoArray Clone() {
      return new LuaFenBaoArray(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Dataconfig.LuaFenBao> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Dataconfig.LuaFenBao.Parser);
    private readonly pbc::RepeatedField<global::Dataconfig.LuaFenBao> items_ = new pbc::RepeatedField<global::Dataconfig.LuaFenBao>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dataconfig.LuaFenBao> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LuaFenBaoArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LuaFenBaoArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LuaFenBaoArray other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
